// This file was generated by Rainbow for .NET Core. Do not modify.
//
// Copyright (c) 2010-present Bifrost Entertainment AS and Tommy Nguyen
// Distributed under the MIT License.
// (See accompanying file LICENSE or copy at http://opensource.org/licenses/MIT)

namespace Rainbow
{
    using System;
    using System.Diagnostics.Contracts;
    using System.Runtime.InteropServices;

    using Audio;
    using Graphics;
    using Interop;

    /// <content>
    /// Contains code pertaining to C++ interop.
    /// </content>
    public sealed partial class Program
    {
        /// <summary>
        /// Initializes all Rainbow components on startup.
        /// </summary>
        /// <param name="masterTablePtr">Pointer to the master table of functions.</param>
        internal static void InitializeComponents(IntPtr masterTablePtr)
        {
            var masterTable = Marshal.PtrToStructure<UMaster>(masterTablePtr);
            Contract.Assert(masterTable.SizeOfStruct == Marshal.SizeOf(masterTable));

            Mixer.InitializeComponents(masterTable.Mixer);
            Sound.InitializeComponents(masterTable.Sound);
            Animation.InitializeComponents(masterTable.Animation);
            FontAtlas.InitializeComponents(masterTable.FontAtlas);
            Label.InitializeComponents(masterTable.Label);
            RenderQueue.InitializeComponents(masterTable.RenderQueue);
            Sprite.InitializeComponents(masterTable.Sprite);
            SpriteBatch.InitializeComponents(masterTable.SpriteBatch);
            TextureAtlas.InitializeComponents(masterTable.TextureAtlas);

            RenderQueue.CreateInstance(masterTable.RenderQueueInstance);
        }
    }
}
