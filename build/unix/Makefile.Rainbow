TARGET = librainbow.a
OBJDIR = build/unix/Rainbow
SRCDIR = libs/Rainbow

CPP = g++
CFLAGS = -g -O2 -Wall -pipe -I $(LIBDIR) -I $(LIBLUA) -I libs -I $(LIBFREETYPE)  -ftree-vectorize -ftree-vectorizer-verbose=6 -march=native

OBJ = $(patsubst $(SRCDIR)/%.cpp,$(OBJDIR)/%.o,$(wildcard $(SRCDIR)/*.cpp)) \
	$(patsubst $(SRCDIR)/%.cpp,$(OBJDIR)/%.o,$(wildcard $(SRCDIR)/**/*.cpp))

default: check $(OBJDIR)/../$(TARGET)

%.a: $(OBJ)
	ar rsc $@ $^

$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	@echo Compiling $<
	@$(CPP) -c $< $(CFLAGS) -o $@

check:
	@if [ ! -d $(OBJDIR)/Hardware ]; then mkdir -p $(OBJDIR)/Hardware; fi
	@if [ ! -d $(OBJDIR)/Input ]; then mkdir -p $(OBJDIR)/Input; fi
	@if [ ! -d $(OBJDIR)/Lua ]; then mkdir -p $(OBJDIR)/Lua; fi
	@if [ ! -d $(OBJDIR)/ParticleSystem ]; then mkdir -p $(OBJDIR)/ParticleSystem; fi

clean:
	rm -fr $(OBJDIR)

debug:
	@echo CFLAGS = $(CFLAGS)
